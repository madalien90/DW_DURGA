import nodemailer from 'nodemailer';
import dotenv from 'dotenv';
dotenv.config();

const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: process.env.SMTP_PORT,
  secure: false, // true for 465, false for other ports
  auth: {
    user: process.env.SMTP_USER,
    pass: process.env.SMTP_PASS,
  },
  tls: {
    rejectUnauthorized: false, // allow self-signed or strict servers
  },
});

// Common template wrapper
function buildTemplate(subject, bodyText) {
  return `
    <div style="font-family: Arial, sans-serif; line-height:1.6; max-width:600px; margin:0 auto; padding:20px; border:1px solid #ddd; border-radius:8px;">
      <h2 style="color:#198754; text-align:center; margin-bottom:20px;">${subject}</h2>
      <p style="font-size:15px; color:#333;">${bodyText}</p>
      <hr style="margin:20px 0; border:none; border-top:1px solid #ddd;">
      <footer style="font-size:12px; color:#666; text-align:center;">
        <p>Generated By.<br>
        <b>DW-DURGA APP</b><br>
        dataworx. Karnataka, India</p>
      </footer>
    </div>
  `;
}

export async function sendMail({ to, subject, text, html }) {
  //console.log('sendMail called with email:', to);
  // Validate email format
  const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
  //console.log(`Mailer - Validating email: ${to}, Result: ${emailRegex.test(to)}`);
  if (!emailRegex.test(to)) {
    //console.log('Mailer failed: Invalid email format');
    throw new Error('Invalid email format');
  }

  try {
    const finalHtml = html || buildTemplate(subject, text || "");
    const info = await transporter.sendMail({
      from: process.env.EMAIL_FROM,
      to,
      subject,
      text,
      html: finalHtml,
    });
    //console.log(`Email sent successfully to ${to}: ${info.messageId}`);
    return info;
  } catch (err) {
    console.error('Email sending failed:', err);
    throw err;
  }
}